<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo生成html永久链接</title>
    <url>/posts/e039d5ab.html</url>
    <content><![CDATA[<h1 id="hexo生成html永久链接"><a href="#hexo生成html永久链接" class="headerlink" title="hexo生成html永久链接"></a>hexo生成html永久链接</h1><h3 id="一、使用"><a href="#一、使用" class="headerlink" title="一、使用"></a>一、使用</h3><h4 id="1-Hexo在-config-yml中设置属性permalink属性用于设置文章在静态文件生成后的路径"><a href="#1-Hexo在-config-yml中设置属性permalink属性用于设置文章在静态文件生成后的路径" class="headerlink" title="1.Hexo在_config.yml中设置属性permalink属性用于设置文章在静态文件生成后的路径"></a>1.<code>Hexo</code>在<code>_config.yml</code>中设置属性<code>permalink</code>属性用于设置文章在静态文件生成后的路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure>

<h4 id="2-比如文章hello-world-md的源路径为"><a href="#2-比如文章hello-world-md的源路径为" class="headerlink" title="2.比如文章hello-world.md的源路径为"></a>2.比如文章<code>hello-world.md</code>的源路径为</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/source/_posts/hello-world.md</span><br></pre></td></tr></table></figure>

<h4 id="3-生成静态文件后的路径为"><a href="#3-生成静态文件后的路径为" class="headerlink" title="3.生成静态文件后的路径为"></a>3.生成静态文件后的路径为</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/path/to/public/2021/03/10/hello-world/index.html</span><br></pre></td></tr></table></figure>

<h3 id="二、变量"><a href="#二、变量" class="headerlink" title="二、变量"></a>二、变量</h3><h4 id="1-Hexo提供了以下变量来生成永久链接"><a href="#1-Hexo提供了以下变量来生成永久链接" class="headerlink" title="1.Hexo提供了以下变量来生成永久链接"></a>1.<code>Hexo</code>提供了以下变量来生成永久链接</h4><table>
<thead>
<tr>
<th>变量</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>:year</td>
<td>发表年份（4位数字）</td>
</tr>
<tr>
<td>:month</td>
<td>发表月份（2位数字）</td>
</tr>
<tr>
<td>:i_month</td>
<td>发表月份（没有前置0）</td>
</tr>
<tr>
<td>:day</td>
<td>发表日（2位数字）</td>
</tr>
<tr>
<td>:i_day</td>
<td>发表日（没有前置0）</td>
</tr>
<tr>
<td>:title</td>
<td>文件名</td>
</tr>
<tr>
<td>:post_title</td>
<td>文章标题</td>
</tr>
<tr>
<td>:post_title</td>
<td>文章ID</td>
</tr>
<tr>
<td>:category</td>
<td>类别。如果没有分类，那么使用属性default_category的值</td>
</tr>
</tbody></table>
<h4 id="2-比如文章配置块内容如下："><a href="#2-比如文章配置块内容如下：" class="headerlink" title="2.比如文章配置块内容如下："></a>2.比如文章配置块内容如下：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2013-07-14 17:01:34</span><br><span class="line">categories:</span><br><span class="line">    - foo</span><br><span class="line">    - bar</span><br></pre></td></tr></table></figure>

<h4 id="3-那么可以定义如下的永久链接"><a href="#3-那么可以定义如下的永久链接" class="headerlink" title="3.那么可以定义如下的永久链接"></a>3.那么可以定义如下的永久链接</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:year/:month/:day/:title/ </span><br><span class="line">:year-:month-:day-:title.html</span><br><span class="line">:category/:title</span><br></pre></td></tr></table></figure>

<h4 id="4-生成的静态文件如下"><a href="#4-生成的静态文件如下" class="headerlink" title="4.生成的静态文件如下"></a>4.生成的静态文件如下</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2013/07/14/hello-world/index.html</span><br><span class="line">2013-07-14-hello-world.html</span><br><span class="line">foo/bar/hello-world</span><br></pre></td></tr></table></figure>

<h3 id="三、语言设置"><a href="#三、语言设置" class="headerlink" title="三、语言设置"></a>三、语言设置</h3><h4 id="1-可以使用属性permalink-defaults-指定默认值，比如使用语言"><a href="#1-可以使用属性permalink-defaults-指定默认值，比如使用语言" class="headerlink" title="1.可以使用属性permalink_defaults:指定默认值，比如使用语言"></a>1.可以使用属性<code>permalink_defaults:</code>指定默认值，比如使用语言</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink_defaults:</span><br><span class="line">  lang: en</span><br></pre></td></tr></table></figure>

<h3 id="四、hexo-abbrlink-（优先选择这个）"><a href="#四、hexo-abbrlink-（优先选择这个）" class="headerlink" title="四、hexo-abbrlink （优先选择这个）"></a>四、hexo-abbrlink （优先选择这个）</h3><p>插件<a href="https://github.com/rozbo/hexo-abbrlink">rozbo&#x2F;hexo-abbrlink</a>支持生成更加常见的永久链接，其实现方式</p>
<blockquote>
<p>对标题+时间进行md5然后再转base64，保存在front-matter中。</p>
</blockquote>
<h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<h4 id="2-修改-config-yml"><a href="#2-修改-config-yml" class="headerlink" title="2.修改_config.yml"></a>2.修改<code>_config.yml</code></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html</span><br></pre></td></tr></table></figure>

<h4 id="3-可以修改生成的算法和表示方式"><a href="#3-可以修改生成的算法和表示方式" class="headerlink" title="3.可以修改生成的算法和表示方式"></a>3.可以修改生成的算法和表示方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">算法：crc16(默认)或crc32</span><br><span class="line">表示：dec(默认，十进制)或hex(十六进制)</span><br></pre></td></tr></table></figure>

<h4 id="4-配置方式"><a href="#4-配置方式" class="headerlink" title="4.配置方式"></a>4.配置方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  #support crc16(default) and crc32</span><br><span class="line">  rep: hex    #support dec(default) and hex</span><br></pre></td></tr></table></figure>

<h4 id="5-编译后会在源文件的配置块中插入"><a href="#5-编译后会在源文件的配置块中插入" class="headerlink" title="5.编译后会在源文件的配置块中插入"></a>5.编译后会在源文件的配置块中插入</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abbrlink: xxxxx</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141640802.JPG"></p>
]]></content>
      <categories>
        <category>分类</category>
      </categories>
      <tags>
        <tag>hexo永久链接</tag>
      </tags>
  </entry>
  <entry>
    <title>一次完整的Hexo写作流程</title>
    <url>/posts/c9fca01f.html</url>
    <content><![CDATA[<h1 id="一次完整的Hexo写作流程"><a href="#一次完整的Hexo写作流程" class="headerlink" title="一次完整的Hexo写作流程"></a>一次完整的Hexo写作流程</h1><p>推荐有任何疑问点的时候，先去查阅<a href="https://hexo.io/zh-cn/docs/writing.html">hexo官方文档</a>。但是官方文档，有着工具书共同的弊端：缺乏对日常操作的指导性，难以分清阅读顺序，难以区分各个内容的重要程度和优先级。</p>
<p>我将根据一次hexo更新博客的完整流程，重新整理总结需要的命令操作。</p>
<p>网上也有很多博文进行此方面操作，可参考<a href="https://zhuanlan.zhihu.com/p/156915260">知乎Hexo博客写文章及基本操作</a>。不同于这些博文，我会额外介绍操作背后的原理。</p>
<p><strong>一次使用hexo更新博客的基础操作流程为：</strong></p>
<ol>
<li>新建一个文章</li>
<li>文章写作</li>
<li>本地预览更新后的博客</li>
<li>远程部署更新博客</li>
</ol>
<h2 id="1-新建文章"><a href="#1-新建文章" class="headerlink" title="1.新建文章"></a>1.新建文章</h2><p>实际上，hexo渲染一篇post的工作流程是：</p>
<ol>
<li>拿到一个markdown文件，</li>
<li>根据这个文件的layout类型，</li>
<li>进行样式排版，生成html文件，</li>
<li>最终展示到网页端。</li>
</ol>
<p>因此，一个<code>_posts/</code>文件夹下的markdown文件就会对应到一篇post。所以，第一步是创建一个markdown文件。有两种方法：</p>
<ul>
<li>使用hexo的命令</li>
<li>按常规的操作，新建一个markdown文件，并保存到<code>_posts/</code>文件夹下即可。</li>
</ul>
<h3 id="1-使用hexo的命令"><a href="#1-使用hexo的命令" class="headerlink" title="(1)使用hexo的命令"></a>(1)使用hexo的命令</h3><p>官方文档是这么说的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>实际上，常用的操作是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;我的第一篇文章&quot;</span></span><br></pre></td></tr></table></figure>

<p>输入这行命令背后的操作是：默认生成一个<strong>layout</strong>为post类型的markdown文件，该文件存储为<code>***.github.io/source/_posts/我的第一篇文章.md</code>。</p>
<h3 id="2-常规的操作"><a href="#2-常规的操作" class="headerlink" title="(2)常规的操作"></a>(2)常规的操作</h3><p>也可以不使用命令行进行生成，我更习惯于直接在Typora中新建文件，并保存到<code>***.github.io/source/_posts/</code>这个位置。</p>
<p>我觉得这样的操作更便捷，因为我常常是打开Typora之后，有多个文档要写，直接<code>Ctrl + N</code>新建一个文档，会快很多。当然这种操作也有弊端：</p>
<ul>
<li><p>需要手动添加文章头部信息Front Matter。添加头部信息Front Matter的操作是：</p>
<ul>
<li>先输入三个短横线-，<code>---</code>，然后回车。</li>
<li>在出现的阴影框里，输入希望添加的属性值，<ul>
<li>常用的有<code>title, date, author</code></li>
<li>次常用的有<code>categories, tags</code></li>
<li><a href="https://hexo.io/zh-cn/docs/front-matter">Front-Matter official manual</a></li>
<li>其他的还有比如：<code>mathjax</code>, <code>top</code>等是hexo的一些插件需要使用的参数。</li>
</ul>
</li>
</ul>
<p>Front Matter其实就是预先告诉hexo该博文的一些基本属性。可以用文件类比，理解为文件的类型信息，创建日期信息，用什么方式打开，而不涉及具体的文件内容。</p>
</li>
<li><p>如果该文章需要展示图片，pdf等其他文件时，需要自行创建一个<strong>同名文件夹</strong>。示例，如果你的markdown文件叫做<code>_posts/markdown-demo.md</code>的话，同名文件夹就是<code>_posts/markdown-demo/</code>。</p>
<p>如果你将<code>***.github.io/_config.yml</code>中的<code>post_asset_folder</code>设置为<code>true</code>，那么使用hexo命令，则会自行创建这个同名文件夹。</p>
</li>
<li><p>不适用于自定义layout以减少重复工作量的情形。（详细参考下面的layout是什么）</p>
</li>
</ul>
<p>使用hexo命令方式创建文档，会自动生成<code>title, date</code>信息。</p>
<h3 id="3-layout是什么（进阶内容，可跳过）"><a href="#3-layout是什么（进阶内容，可跳过）" class="headerlink" title="(3)layout是什么（进阶内容，可跳过）"></a>(3)layout是什么（进阶内容，可跳过）</h3><p>感兴趣且可以科学上网的同学，强烈推荐一个<a href="https://www.youtube.com/watch?v=Jiwbmyc4nCA&list=PLLAZ4kZ9dFpOMJR6D25ishrSedvsguVSm&index=6">YouTube Hexo系列视频</a>。第六集scaffolds和第十二集layout基本就对应本小节内容。</p>
<p>回到官方文档，会看到<code>hexo new</code>命令有个可选参数叫做<code>[layout]</code>。在文档的下一句说到</p>
<blockquote>
<p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p>
</blockquote>
<p>有的博主会介绍说，布局有三种：<code>post</code>（文章）、<code>draft</code>（草稿）、<code>page</code>（页面）。其实不够准确。如果你愿意，你可以有n多种布局。只不过这三种是hexo以及大多数主题theme已经默认帮你写好的。</p>
<p><em>那么什么是layout呢？</em></p>
<p>layout：英文直译是版面设计。也就是说这个命令告诉hexo，该如何排版。不同的排版使用不同的html网页布局，css样式，展示不同的属性。</p>
<p><em>hexo是如何根据这个layout参数值进行后续操作的呢？</em></p>
<ul>
<li>首先，每一个markdown文件都有自己的layout。对于没有显示在Front Matter写明layout种类的文件，hexo会自动根据<code>***.github.io/_config.yml</code>中的<code>default_layout:</code>属性值来决定是什么layout，这个值默认为<code>post</code>。也就是说hexo会默认根据post的内容及格式规定对markdown文章进行渲染。</li>
<li>一个layout有两个位置的定义来共同决定。<ul>
<li>在<code>***.github.io/scaffolds/</code>文件夹下，和</li>
</ul>
</li>
<li>在<code>***.github.io/themes/theme-name/layout/</code>文件夹下。</li>
</ul>
<h3 id="4-scaffolds文件夹"><a href="#4-scaffolds文件夹" class="headerlink" title="(4)scaffolds文件夹"></a>(4)scaffolds文件夹</h3><p>第一个部分<code>scaffolds/</code>文件夹下，主要规定新建markdown文件的内容：Front Matter和正文。</p>
<p>举例：可以在该文件夹下，创建一个新的md文件，假设叫做<code>selflayout.md</code>，在里面输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123;title&#125;&#125;</span><br><span class="line">date: &#123;&#123;date&#125;&#125;</span><br><span class="line">author: hahaha</span><br><span class="line">layout: &#123;&#123;layout&#125;&#125;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Demo: self-defined post content</span><br></pre></td></tr></table></figure>

<p>这之后，就可以直接使用hexo命令行操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new selflayout <span class="string">&quot;demo&quot;</span></span><br></pre></td></tr></table></figure>

<p>在<code>_posts/</code>文件夹下，生成一个名为<code>demo.md</code>layout为selflayout的文件啦。</p>
<p>更改<code>scaffolds/</code>下的对应markdown文件，可以大大减少很多重复工作。</p>
<ul>
<li>比如你想要创建一个系列博客，共享一些<code>categories, author</code>，你就可以新建一个layout，在Front Matter中添加<code>categories, author</code>的属性值。</li>
<li>再比如所有的post的作者都是同一个人，叫aa，而你不想在每一篇post的Front Matter中都手动添加<code>author: aa</code>。就可以选择在<code>scaffolds/post.md</code>的Front Matter中添加<code>author: aa</code>。这样，每次使用<code>hexo new file-name</code>都会自动实现这个功能啦。</li>
</ul>
<h3 id="5-theme的layout文件夹"><a href="#5-theme的layout文件夹" class="headerlink" title="(5)theme的layout文件夹"></a>(5)theme的layout文件夹</h3><p>一个layout的第二部分定义在<code>themes/theme-name/layout/</code>文件夹下。这部分主要规定ejs, css等具体的排版样式。hexo渲染一个页面的先后顺序是，所有的页面都建立在<code>layout.ejs</code>的基础上，然后根据各自的版面进行渲染，</p>
<ul>
<li>比如index.html的页面是这么生成的，最外层是<code>layout.ejs</code>，然后将<code>layout.ejs</code>内部的<code>&lt;%- body %&gt;</code>替换为<code>index.ejs</code>的渲染效果。</li>
<li>再比如一篇博客的html页面是这么生成的，最外层是<code>layout.ejs</code>，然后将<code>layout.ejs</code>内部的<code>&lt;%- body %&gt;</code>替换为<code>post.ejs</code>的渲染效果。</li>
</ul>
<p>对应于<code>_posts/</code>文件下的每一个markdown文件，如果Front Matter里</p>
<ul>
<li>没有指明layout是什么，会默认根据<code>_config.yml</code>里的<code>default_layout: post</code>使用<code>layout.ejs</code> + <code>post.ejs</code>方式进行渲染</li>
<li>如果指明了layout是什么（比如我们上面新建了一个叫做<code>selflayout</code>的layout），<ul>
<li>在<code>themes/theme-name/layout/</code>下也存在<code>selflayout.ejs</code>文件，就会使用<code>layout.ejs</code> + <code>selflayout.ejs</code>方式进行渲染</li>
<li>如果在<code>themes/theme-name/layout/</code>不存在对应的ejs文件，仍会默认使用<code>layout.ejs</code> + <code>post.ejs</code>方式进行渲染。</li>
</ul>
</li>
</ul>
<p>总结来说，<strong>scaffolds文件夹下，会对内容进行默认设置，而theme的layout文件夹下的ejs文件，则会对排版进行设置。</strong></p>
<h1 id="2-文章写作"><a href="#2-文章写作" class="headerlink" title="2.文章写作"></a>2.文章写作</h1><p>对于一般的文字内容排版，只需要按照markdown的写作格式进行写作即可。例如：一级标题，二级标题，emoji输入，加粗斜体等。</p>
<p>我这里添加几个我常用到的额外的功能：插入本地图片，展示本地pdf，展示数学公式，链接到本站其他blog</p>
<h3 id="1-插入本地图片"><a href="#1-插入本地图片" class="headerlink" title="(1)插入本地图片"></a>(1)插入本地图片</h3><p>这里主要参考这篇文章<a href="https://fuhailin.github.io/Hexo-images/">赵大宝hexo-images</a>，介绍的很详细，我在此基础上稍作补充。在此说明这篇文章里的前四个方法：</p>
<ul>
<li>绝对路径本地引用，方法：<ul>
<li>将图片存储于<code>source/images</code>文件夹中</li>
<li>在markdown文件中写<code>![picture description](images/picname.picformat)</code></li>
</ul>
</li>
<li>相对路径本地引用，方法：<ul>
<li>将图片存储于<code>_posts/</code>同名文件夹下</li>
<li>同绝对路径引用，在markdown文件中写<code>![picture description](images/picname.picformat)</code></li>
</ul>
</li>
<li>标签插件语法引用，方法：<ul>
<li>将图片存储于<code>_posts/</code>同名文件夹下</li>
<li>在markdown文件中写<code>&#123;% asset_img image.jpg This is an image %&#125;</code></li>
</ul>
</li>
<li>HTML语法引用<ul>
<li>将图片存储于<code>_posts/</code>同名文件夹下</li>
<li>在markdown文件中写<code>&lt;img src=&quot;picname.picformat&quot; weight=&quot;50%&quot; height=&quot;100%&quot; title=&quot;picture description&quot; alt=&quot;picture alternative description&quot;/&gt;</code></li>
</ul>
</li>
</ul>
<h3 id="2-示例"><a href="#2-示例" class="headerlink" title="(2)示例"></a>(2)示例</h3><p>示例以及优劣势比较。以下是我使用这四种方法展示本地图片的效果：</p>
<p><strong>绝对路径</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![绝对路径](https://fuguigui.github.io/images/BD1.png)</span><br></pre></td></tr></table></figure>

<p><strong>相对路径:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![相对路径](https://fuguigui.github.io/hexo2/BD1.png)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>标签插件语法引用</p>
</li>
<li><p>html引用</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![html引用小图](https://fuguigui.github.io/hexo2/BD1.png)</span><br></pre></td></tr></table></figure>

<p><strong>html引用小图</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![html引用原图](https://fuguigui.github.io/hexo2/BD1.png)</span><br></pre></td></tr></table></figure>

<p><strong>html引用原图</strong></p>
<h3 id="3-优劣势比较"><a href="#3-优劣势比较" class="headerlink" title="(3)优劣势比较"></a>(3)优劣势比较</h3><p>根据我的测试结果：</p>
<ul>
<li>标签插件语法引用失效。没闹明白为什么。如果有知道的同学，我真诚求教。</li>
<li>html引用小图失效。我的设置是<code>weight=&quot;50%&quot; height=&quot;50%&quot;</code>。依旧没弄明白为什么，求教中。</li>
<li>绝对路径和相对路径在引用效果上没有区别。唯一的区别是文件存储位置，是喜欢图片集中存放，还是每个post建一个文件夹存放，因人而异。</li>
<li>使用markdown本身的路径引用方式的话，无法在引用时调整图片大小。网页端最终显示的图片大小是图片原本的大小（如果屏幕放得下的话）。想要调整显示页面的图片大小，必须<strong>手动更改图片原本的大小</strong>。比如，我这里相对路径引用的原图和小图，其实对应着两个png文件，一个为原始图片大小为宽1097高537，一个我手动更改为小图，其尺寸为宽500高245。</li>
<li>使用html引用方式的优势在于，可以在引用时更改大小（？？？原理上是这样，但是我没有成功？？？）；还可以设置图片的替代描述文字（当图片无法正常显示的时候，用以替代图片的文字显示）。</li>
<li><strong>总体来说：我推荐绝对&#x2F;相对路径引用方式</strong></li>
</ul>
<h3 id="4-展示本地pdf"><a href="#4-展示本地pdf" class="headerlink" title="(4)展示本地pdf"></a>(4)展示本地pdf</h3><p>对此网上也有诸多教程，在此参考一篇<a href="https://blog.csdn.net/u010820857/article/details/82356974">csdn博客hexo添加pdf插件</a>，并另外补充一种markdown的文件引用方式。</p>
<ul>
<li><p>使用npm插件方式：</p>
<ul>
<li><p>安装插件：<code>npm install --save hexo-pdf</code></p>
</li>
<li><p>将pdf文件存储于<code>_posts/</code>的同名文件夹下。</p>
</li>
<li><p>在markdown文本里输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% pdf file-name.pdf %&#125; </span><br></pre></td></tr></table></figure>
</li>
<li><p>（如果需要引用网上pdf资源，可以直接使用<code>&#123;% pdf http://url-to-pdf/file-name.pdf %&#125; </code>）</p>
</li>
</ul>
</li>
<li><p>markdown自带的文件引用方式：</p>
<ul>
<li><p>将pdf文件存储于<code>_posts/</code>的同名文件夹下。</p>
</li>
<li><p>在markdown文本里输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[pdf file description](file-name.pdf)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<p>这两种方法都可以使别人获取你的pdf文件，区别在于：</p>
<ul>
<li>npm插件方式：会生成内置pdf的小窗口，<strong>读者可以直接阅读到pdf文件内容</strong>。</li>
<li>markdown自带的方式：会生成一行带有超链接的文字，点击文字，则直接提示下载该文件。这行文字就是种括号里你输入的描述性文字。</li>
</ul>
<p>我一般希望别人直接阅读到我的pdf内容，所以推荐npm的插件方式。</p>
<h3 id="5-展示数学公式"><a href="#5-展示数学公式" class="headerlink" title="(5)展示数学公式"></a>(5)展示数学公式</h3><p>参考<a href="https://blog.csdn.net/qq_38496329/article/details/104065659">csdn:hexo博客支持数学公式</a>。</p>
<ul>
<li><p>安装npm渲染器：<code>npm install hexo-renderer-kramed --save</code></p>
</li>
<li><p>修改<code>***.github.io/_configs.yml</code>配置文件中</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在markdown文件的Front Matter加入<code>mathjax: true</code></p>
</li>
<li><p>按照markdown语法，在需要添加数学公式的地方，直接按照markdown语法使用<code>$ formula $</code>添加行内公式或者<code>$$ formula $$</code>添加整行公式。</p>
</li>
</ul>
<h2 id="6-链接到本站其他blog"><a href="#6-链接到本站其他blog" class="headerlink" title="(6)链接到本站其他blog"></a>(6)链接到本站其他blog</h2><p>如何在当前的blog里引用本站其他的blog呢？</p>
<p>本质上就是直接使用markdown的文件链接方式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[file description](file path)</span><br></pre></td></tr></table></figure>

<p>唯一不同的就是这里的file path，不是指要被引用的markdown文件在<code>_posts</code>文件夹的位置，而是<strong>经hexo渲染后生成的html文件的位置</strong>。</p>
<p>举例来说，我这里想引用另一篇介绍hexo的blog，它的原始文件叫做<code>source/_posts/Hexo1.md</code>，经hexo渲染后的文件存储为<code>public/hexo1/index.html</code>。</p>
<p>而我当前的文件叫做<code>source/_posts/Hexo2.md</code>，经hexo渲染后的文件存储为<code>public/hexo2/index.html</code>。</p>
<p>如果习惯于markdown文件的书写，可能会直接在本文件里写</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Hexo1](Hexo1.md)</span><br></pre></td></tr></table></figure>

<p>正确的写法应该是，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Hexo1](../hexo1/index.html)</span><br></pre></td></tr></table></figure>

<p>这是因为hexo在渲染的时候，并不会更改<code>()</code>中的内容。如果按照第一种写法，实际上会在<code>public/hexo2/</code>文件夹下寻找名为<code>Hexo1.md</code>的文件，并不存在。按照第二种写法，则是先去到父目录<code>public/</code>然后找到<code>hexo1/index.html</code>。</p>
<p><a href="https://fuguigui.github.io/hexo1/index.html">Hexo1</a></p>
<p>当然，有的小伙伴的blog是用时间来生成路径的，比如<code>public/2019/07/02/hexo2/index.html</code>，同理寻找到正确的路径即可。至于如何控制hexo使用时间还是文章标题来命名，在<code>_config.yml</code>文件里有一个属性叫做<code>permalink: </code>，我这里设置为<code>:title/</code>，即按照blog标题生成链接路径。</p>
<h3 id="7-草稿"><a href="#7-草稿" class="headerlink" title="(7)草稿"></a>(7)草稿</h3><p>此外，可以在<code>source/drafts/</code>文件夹下，创建markdown文件，写草稿。在这些文档里，正常写作即可，但它们不会被渲染，也就不会显示在最终的博客页面里。</p>
<h1 id="3-发布文章"><a href="#3-发布文章" class="headerlink" title="3.发布文章"></a>3.发布文章</h1><p>先列举一些常用的命令</p>
<ul>
<li><p>Clean: <code>hexo clean</code>。该命令会删除整个<code>***.github.io/public/</code>文件夹</p>
</li>
<li><p>Generate: <code>hexo generate</code>或者简写为<code>hexo g</code>。该命令会生成静态文件夹<code>public/</code>，也就是从markdown到网页文件html等的转换操作</p>
</li>
<li><p>Server: 启动服务器常用的是<code>hexo server</code>或者简写为<code>hexo s</code>。</p>
<ul>
<li>若需指定端口号则为<code>hexo server -p 5000</code>5000可以更改为其他端口号。</li>
</ul>
<p>该命令会把生成好的静态文件部署到本地的指定端口，之后即可在本地浏览器输入<code>localhost:4000</code>即可预览。若指定了端口号，则把4000改为你指定的端口，如上个示例中的<code>localhost:5000</code></p>
</li>
<li><p>deploy：<code>hexo deploy</code>或者简写为<code>hexo d</code>。该命令将网站部署到服务器上。实际操作是：更新你在github上的仓库<code>***.github.io</code>的指定分支（如果你采用Hexo系列第一节说到的两分支方式的话）。这是你最终发表的博客页面，你可以在浏览器上访问<code>https://***.github.io</code>来查看更新后的博客啦。</p>
</li>
</ul>
<p>接着，给出一些命令使用的常见套路</p>
<ul>
<li><p><code>hexo clean</code>这个命令其实很少用。使用情况常见于：更新了<code>_config.yml</code>文件夹，删除了一些已有博文等。原因就是速度慢，耗费不必要的时间。毕竟它会将整个<code>public/</code>文件夹删除，再重新生成。推荐偶尔清理使用即可。</p>
</li>
<li><p>通常更新一次博客的套路是先本地预览，再远程部署。即先执行</p>
<ul>
<li><code>hexo g; hexo s</code>，再执行</li>
<li><code>hexo d</code>或者<code>hexo g; hexo d</code></li>
</ul>
</li>
<li><p>hexo有个特别便利的地方！</p>
<ul>
<li><p>在本地预览时，你仍可以更改markdown文件中一般的文字内容，然后直接在浏览器端刷新页面，就能看到实时更改的效果，而不需要再执行一次<code>hexo g;hexo s</code>，节省很多时间。常用于预览过程中进行微调操作。我的测试表明，此时更改文章的<code>categories, tags</code>等Front-Matter的属性的话，也可以动态刷新，很神奇。</p>
</li>
<li><p>但是，有些涉及到更深层次的操作，比如利用到themes文件里的js函数，css样式，文件链接等，可能无法实时更新。此时仍需要重新generate才可以预览最新效果。同理，如果你更改了themes文件夹下面的css文件, ejs文件, yml文件等，通常也需要重新渲染。</p>
</li>
<li><p>注意：在执行<code>hexo s</code>之后，想要中断操作，使用的是<code>control + C</code>快捷键。我老会习惯性地使用<code>con trol + Z</code>的快捷键。此时，可能出现端口被占用的错误。解决办法是：1. 找到被占用端口4000的进程号pid，2. kill掉这个进程。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsof -i:4000</span><br><span class="line">kill -9 pid</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>如果你采用两个分支的git部署方式。使用<code>hexo d</code>只是更新了其中的一个分支，此时仍需要进行常规的git仓库更新操作<code>git add ... git commit ... git push</code>这一系列来更新另一分支。</p>
</li>
</ul>
<p>总结来说，最常用的套路就是</p>
<ol>
<li><code>hexo g; hexo s</code>本地预览，再更改，直到满意为止</li>
<li><code>hexo d</code>或者<code>hexo g; hexo d</code>远程部署。</li>
</ol>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141740073.JPG"></p>
]]></content>
      <categories>
        <category>分类</category>
      </categories>
      <tags>
        <tag>hexo语法</tag>
        <tag>hexo写作</tag>
      </tags>
  </entry>
  <entry>
    <title>通过 Cloudflare 和 jsDelivr 免费加速博客 GitHub 图床等静态资源</title>
    <url>/posts/3a244d75.html</url>
    <content><![CDATA[<h1 id="通过-Cloudflare-和-jsDelivr-免费加速博客-GitHub-图床等静态资源"><a href="#通过-Cloudflare-和-jsDelivr-免费加速博客-GitHub-图床等静态资源" class="headerlink" title="通过 Cloudflare 和 jsDelivr 免费加速博客 GitHub 图床等静态资源"></a>通过 Cloudflare 和 jsDelivr 免费加速博客 GitHub 图床等静态资源</h1><p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202402291829274.png"></p>
<h3 id="重点："><a href="#重点：" class="headerlink" title="重点："></a>重点：</h3><p>通过 Cloudflare 和 jsDelivr 免费加速博客 GitHub 静态资源(GitHub图床)，自动实现 CDN 资源的海内外分流，加速博客访问速度。</p>
<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>我们在使用 PicGo + GitHub 搭建图床，这样搭建的图床很稳定，但缺点是国内访问速度慢。可以使用 <code>jsDelivr</code> 对 Github 图床等静态资源进行免费 CDN 加速。</p>
<p>jsDelivr是什么？</p>
<p><code>jsDelivr</code>是国外的一家优秀的公共 CDN 服务提供商，该平台是首个「打通中国大陆与海外的免费 CDN 服务」，无须担心中国防火墙问题而影响使用。官网：<a href="http://www.jsdelivr.com/">http://www.jsdelivr.com/(opens new window)</a></p>
<p>但是<code>jsDelivr</code>因为掉 ICP 等原因，国内速度越来越慢。好在 <a href="https://github.com/54ayao/Chinajsdelivr">Chinajsdelivr</a> 项目将它在国内“复活”了。</p>
<p>因此，本文思路是，对于 Github 公开仓库中的静态资源：</p>
<ul>
<li>如果访问来源是国内，则使用 <a href="https://github.com/54ayao/Chinajsdelivr">Chinajsdelivr</a> 进行加速，域名为<code>jsd.cdn.zzko.cn</code></li>
<li>如果访问来源是国内，则使用原版 jsDelivr 进行加速，域名为<code>cdn.jsDelivr.net</code></li>
</ul>
<p>即：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1-1. Github raw 链接</span><br><span class="line">https://raw.githubusercontent.com/leegical/Blog_img/main/md_img202305061640828.png</span><br><span class="line"># 1-2. Github 仓库文件链接</span><br><span class="line">https://github.com/leegical/Blog_img/blob/main/md_img202305061640828.png</span><br><span class="line"></span><br><span class="line"># 国内请求将访问到</span><br><span class="line">https://jsd.cdn.zzko.cn/gh/leegical/Blog_img/md_img202305061640828.png</span><br><span class="line"></span><br><span class="line"># 国外请求将访问到</span><br><span class="line">https://cdn.jsdelivr.net/gh/leegical/Blog_img/md_img202305061640828.png</span><br></pre></td></tr></table></figure>

<p>也就是说，我希望对于同一个资源链接，能够根据国内外请求来源自动重定向，使用不同的 CDN 加速链接。这就可以使用 Cloudflare 的重定向规则。</p>
<h2 id="2-Cloudflare"><a href="#2-Cloudflare" class="headerlink" title="2 Cloudflare"></a>2 Cloudflare</h2><h3 id="2-1-配置域名"><a href="#2-1-配置域名" class="headerlink" title="2.1 配置域名"></a>2.1 配置域名</h3><p>使用 Cloudflare 托管域名，这一点教程很多，跟着做就行，</p>
<p><a href="https://cdn.haoyep.com/gh/leegical/Blog_img/cdnimg/202312141651245.png?size=large"><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202402291830357.png" alt="托管域名"></a></p>
<p>在 DNS 配置中，新增一条 CNAME 解析记录，并启用代理。 如图，我这里是将 <code>cdn.haoyep.com</code> 解析到了 <code>jsd.cdn.zzko.cn</code>，并使用 Cloudflare 代理（点亮小云朵）。</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141741352.png" alt="添加CNAME解析记录"></p>
<h3 id="2-2-配置重定向规则"><a href="#2-2-配置重定向规则" class="headerlink" title="2.2 配置重定向规则"></a>2.2 配置重定向规则</h3><p><strong>目标</strong>：资源链接都使用 <code>cdn.haoyep.com</code>，Cloudflare 在代理 <code>cdn.haoyep.com</code> 时，判断请求来源是国内，则将 <code>cdn.haoyep.com</code> 重定向到 <code>jsd.cdn.zzko.cn</code>；国外的请求则重定向到 <code>cdn.jsdelivr.net</code>。</p>
<ol>
<li>配置国内重定向<ul>
<li>规则名称 （必需）：标注国内，方便区分</li>
<li>自定义筛选表达式：<code>(http.host eq &quot;cdn.haoyep.com&quot; and ip.geoip.country eq &quot;CN&quot;)</code></li>
<li>URL 重定向<ul>
<li>类型：动态</li>
<li>表达式：<code>concat(&quot;https://jsd.cdn.zzko.cn&quot;, http.request.uri.path)</code></li>
<li>状态代码：<code>302</code></li>
</ul>
</li>
</ul>
</li>
</ol>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202402291831094.png" alt="国内重定向规则配置"></p>
<ol>
<li>配置国外重定向<ul>
<li>规则名称 （必需）：标注国外，方便区分</li>
<li>自定义筛选表达式：<code>(http.host eq &quot;cdn.haoyep.com&quot; and ip.geoip.country ne &quot;CN&quot;)</code></li>
<li>URL 重定向<ul>
<li>类型：动态</li>
<li>表达式：<code>concat(&quot;https://cdn.jsdelivr.net&quot;, http.request.uri.path)</code></li>
<li>状态代码：<code>302</code></li>
</ul>
</li>
</ul>
</li>
</ol>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202402291831025.png" alt="国外重定向规则配置"></p>
<p>技巧</p>
<p>HTTP 重定向状态选择302而不是301。虽然两类请求都会被 Cloudflare 缓存，但301理论上是永久跳转而302是临时跳转，因此301可能会导致长时间缓存，不利于今后修改重定向到新地址。</p>
<h2 id="3-PicGo-设置"><a href="#3-PicGo-设置" class="headerlink" title="3 PicGo 设置"></a>3 PicGo 设置</h2><p>为了让上传的图片自动生成 CDN 链接，还需要配置 PicGo：</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202402291831698.png" alt="PicGo Github 图床设置"></p>
<ul>
<li>设定存储路径：可以不填，也可以填仓库的某个文件夹</li>
<li>自定义域名： 改为<code>https://&lt;cdn加速链接&gt;/gh/&lt;用户名&gt;/&lt;图床仓库名&gt;</code>，如图我这里改成 <code>https://cdn.haoyep.com/gh/leegical/Blog_img</code> 即可。</li>
</ul>
<p>Piclist设置：</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202402291839783.png"></p>
<p>对于之前文章中的 Github raw 或文件链接，替换成 CDN 链接即可。本文只需要进行以下替换：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 要替换的</span><br><span class="line">https://raw.githubusercontent.com/leegical/Blog_img/main</span><br><span class="line">https://github.com/leegical/Blog_img/blob/main</span><br><span class="line"></span><br><span class="line"># 替换为</span><br><span class="line">https://cdn.haoyep.com/gh/leegical/Blog_img</span><br></pre></td></tr></table></figure>

<p>附最新好用的CDN供选择：</p>
<blockquote>
<p>jsdelivr 节点：常用于加速 GitHub&#x2F;npm 项目，可通过更改节点改善项目在国内的可用性。</p>
</blockquote>
<table>
<thead>
<tr>
<th>节点服务器</th>
<th>提供商</th>
<th>可用性</th>
</tr>
</thead>
<tbody><tr>
<td>gcore.jsdelivr.net</td>
<td>Gcore 节点</td>
<td>高</td>
</tr>
<tr>
<td>testingcf.jsdelivr.net</td>
<td>Cloudflare 节点</td>
<td>高</td>
</tr>
<tr>
<td>quantil.jsdelivr.net</td>
<td>Quantil 节点</td>
<td>尚可</td>
</tr>
<tr>
<td>fastly.jsdelivr.net</td>
<td>Fastly 节点</td>
<td>尚可</td>
</tr>
<tr>
<td>originfastly.jsdelivr.net</td>
<td>Fastly 节点</td>
<td>低</td>
</tr>
<tr>
<td>test1.jsdelivr.net</td>
<td>Cloudflare 节点</td>
<td>低</td>
</tr>
<tr>
<td>cdn.jsdelivr.net</td>
<td>通用节点</td>
<td>低</td>
</tr>
</tbody></table>
<blockquote>
<p>个人提供的 jsdelivr 节点</p>
</blockquote>
<table>
<thead>
<tr>
<th>节点服务器</th>
<th>提供商</th>
<th>使用须知</th>
</tr>
</thead>
<tbody><tr>
<td>jsd.onmicrosoft.cn</td>
<td>国内 CDN</td>
<td>仅可自用，不可滥用</td>
</tr>
<tr>
<td>jsdelivr.b-cdn.net</td>
<td>台湾 CDN</td>
<td>速度快，稳定性未知</td>
</tr>
</tbody></table>
<p>台湾 cdn，不清楚稳定性。</p>
<blockquote>
<p>npm 节点：unpkg.com 国内几乎不可用，可用下方国内 cdn 节点，公益节点仅可自用，不可滥用。</p>
</blockquote>
<table>
<thead>
<tr>
<th>npm.elemecdn.com</th>
<th>饿了么</th>
<th>同步快</th>
</tr>
</thead>
<tbody><tr>
<td>npm.onmicrosoft.cn</td>
<td>公益</td>
<td>需准确的版本号</td>
</tr>
<tr>
<td>unpkg.zhimg.com</td>
<td>知乎</td>
<td>同步慢</td>
</tr>
<tr>
<td>npm.akass.cn</td>
<td>公益</td>
<td>需准确的版本号</td>
</tr>
<tr>
<td>cdn.chuqis.com&#x2F;npm&#x2F;</td>
<td>公益</td>
<td>需准确的版本号</td>
</tr>
<tr>
<td>code.bdstatic.com&#x2F;npm</td>
<td>百度</td>
<td>仅同步热门包</td>
</tr>
</tbody></table>
<p><strong>节点搜索服务</strong></p>
<p><a href="https://cdnjs.shssedu.ac.cn/">https://cdnjs.shssedu.ac.cn</a></p>
<p>CDNJSCN 是一项免费开源 CDN (国内) 搜索服务，提供 CDNJS 库的搜索，加速链接转换服务，此外还提供 Github 、UNPKG 、Google 前端公共库、Google Fonts 加速链接的替换。</p>
]]></content>
      <categories>
        <category>分类</category>
      </categories>
      <tags>
        <tag>hexo教程</tag>
      </tags>
  </entry>
  <entry>
    <title>记录一下如何同时将hexo部署到github和个人ubuntu服务器</title>
    <url>/posts/10de2c4f.html</url>
    <content><![CDATA[<h2 id="记录一下如何同时将hexo部署到github和个人ubuntu服务器"><a href="#记录一下如何同时将hexo部署到github和个人ubuntu服务器" class="headerlink" title="记录一下如何同时将hexo部署到github和个人ubuntu服务器"></a>记录一下如何同时将hexo部署到github和个人ubuntu服务器</h2><h2 id="1、申请秘钥对的时候需要指定位置和名称"><a href="#1、申请秘钥对的时候需要指定位置和名称" class="headerlink" title="1、申请秘钥对的时候需要指定位置和名称"></a>1、申请秘钥对的时候需要指定位置和名称</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;eystasy@gmail.com&quot; -f C:\Users\Colar\github\my_ssh_key</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>-t 表示选择加密方式。</p>
<p>-c 表示用户，通常填写邮箱表示</p>
<p>-f 指定秘钥保存路径，最后的“my_ssh_key”表示秘钥名称</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010248698.png"></p>
<h3 id="2、用notepad等软件打开-pub的公钥，复制后粘贴到github的SSH-key的位置。具体见图。"><a href="#2、用notepad等软件打开-pub的公钥，复制后粘贴到github的SSH-key的位置。具体见图。" class="headerlink" title="2、用notepad等软件打开.pub的公钥，复制后粘贴到github的SSH key的位置。具体见图。"></a>2、用notepad等软件打开.pub的公钥，复制后粘贴到github的SSH key的位置。具体见图。</h3><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010253917.png" style="zoom:67%;" />

<img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010253368.png" style="zoom:67%;" />

<h3 id="3-配置config文件"><a href="#3-配置config文件" class="headerlink" title="3.配置config文件"></a>3.配置config文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">路径：C:\Users\Colar\.ssh</span><br></pre></td></tr></table></figure>

<h4 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  HostName github.com</span><br><span class="line">  User git</span><br><span class="line">  IdentityFile C:\\Users\\Colar/github/my_ssh_key</span><br><span class="line">  IdentitiesOnly yes</span><br></pre></td></tr></table></figure>

<ul>
<li><p>将<code>C:/path/to/your/private_key</code>替换为你的私钥文件的实际路径。注意路径使用正斜杠（&#x2F;）或双反斜杠（\）。</p>
</li>
<li><p><code>Host</code>可以是任何你想要的别名，如果你连接的是GitHub，通常直接使用<code>github.com</code>。</p>
</li>
<li><p><code>HostName</code>是Git服务器的地址，对于GitHub，它就是<code>github.com</code>。</p>
</li>
<li><p><code>User</code>是SSH连接中使用的用户名，对于GitHub而言，通常是<code>git</code>。</p>
</li>
<li><p><code>IdentitiesOnly yes</code>确保SSH只使用指定的<code>IdentityFile</code>。</p>
</li>
<li><h5 id="运行下列代码检测连通性："><a href="#运行下列代码检测连通性：" class="headerlink" title="运行下列代码检测连通性："></a>运行下列代码检测连通性：</h5></li>
<li><pre><code>ssh -T git@github.com
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">![](https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010259858.png)</span><br><span class="line"></span><br><span class="line">或者下面的代码（区别是有错误输出）：</span><br><span class="line"></span><br></pre></td></tr></table></figure>
ssh -vT git@github.com
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  ![](https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010300250.png)</span><br><span class="line"></span><br><span class="line">### 4.hexo中的_config主文件中进行相关修改</span><br><span class="line"></span><br></pre></td></tr></table></figure>
deploy:
</code></pre>
</li>
<li><p>type: git<br>repo:<br>branch:</p>
</li>
<li><p>type: heroku<br>repo:<br>branch:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">##### 因为我是用的nginx proxy manager管理网站，所以同时采用了git链接和ssh链接，附上个人部署方案：</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>deploy:</p>
<ul>
<li>type: git<br>repo: ssh:&#x2F;&#x2F;<a href="mailto:&#114;&#111;&#111;&#116;&#x40;&#x31;&#49;&#x31;&#46;&#49;&#x31;&#49;&#x2e;&#x31;&#49;&#49;&#46;&#49;&#49;&#49;">&#114;&#111;&#111;&#116;&#x40;&#x31;&#49;&#x31;&#46;&#49;&#x31;&#49;&#x2e;&#x31;&#49;&#49;&#46;&#49;&#49;&#49;</a>:&#x2F;home&#x2F;git&#x2F;blog<br>branch: master</li>
<li>type: git<br>repo: <a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#109;">&#103;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#109;</a>:Eystasy&#x2F;eystasy.github.io.git<br>branch: master</li>
</ul>
</li>
</ul>
<pre><code>
### 5.尝试部署，注意看是否部署两次，即可判定是否成功。

![](https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010305753.png)

![](https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010305255.png)

### 6.至此成功解决问题，这个问题都花了好几个小时才解决。记录一下，以被不时之需。
</code></pre>
]]></content>
      <categories>
        <category>hexo经验</category>
      </categories>
      <tags>
        <tag>hexo部署多个服务器</tag>
        <tag>指定秘钥 - git指定秘钥 - ssh指定秘钥</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo创建sitemap站点地图向搜索引擎提交</title>
    <url>/posts/96774ff8.html</url>
    <content><![CDATA[<h1 id="Hexo创建sitemap站点地图向搜索引擎提交"><a href="#Hexo创建sitemap站点地图向搜索引擎提交" class="headerlink" title="Hexo创建sitemap站点地图向搜索引擎提交"></a>Hexo创建sitemap站点地图向搜索引擎提交</h1><p>站点地图是一种xml文件，可以通过该文件列出网站上的网页，从而将网站内容的组织架构告知Google和其他搜索引擎。Sitemap 可方便管理员通知搜索引擎他们网站上有哪些可供抓取的网页。搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站。</p>
<p>向搜索引擎提交自己hexo博客的sitemap，有助于让别人更好地通过搜索引擎搜索到自己的博客。</p>
<h2 id="一、生成Hexo博客的sitemap文件"><a href="#一、生成Hexo博客的sitemap文件" class="headerlink" title="一、生成Hexo博客的sitemap文件"></a>一、生成Hexo博客的sitemap文件</h2><p>Hexo有提供2个插件，用来自动生成sitemap文件。用以下命令安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<p>安装完后，每当执行 <code>hexo generate</code>命令后，就会在Hexo下的public目录下生成两个文件。</p>
<ul>
<li>sitemap.xml 这个用来提交给Google、Bing等搜索引擎</li>
<li>baidusitemap.xml 这个是百度专用的</li>
</ul>
<p>运行 <code>hexo deploy</code>命令后，打开访问：<code>域名/sitemap.xml</code>，<code>域名/baidusitemap.xml</code>这两个文件都能访问，就没问题了。</p>
<p>访问结果如下图所示：<br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010324177.png" alt="img"></p>
<h2 id="二、提交站点地图-sitemap-给搜索引擎"><a href="#二、提交站点地图-sitemap-给搜索引擎" class="headerlink" title="二、提交站点地图(sitemap)给搜索引擎"></a>二、提交站点地图(sitemap)给搜索引擎</h2><h3 id="1-提交给Google"><a href="#1-提交给Google" class="headerlink" title="1.提交给Google"></a>1.提交给Google</h3><p>网址：<a href="https://search.google.com/search-console/">https://search.google.com/search-console/</a><br>当然，前提是你能访问Google，并注册了Google的账号了。</p>
<p>1).需要有个先验证你对网站的所有权</p>
<ul>
<li><p>首先，按操作提示下载提供的HTML验证文件（google2342fweklrljlj235423.html类型这样的文件）；</p>
</li>
<li><p>然后，要把这个文件放网站首页；</p>
<p>（就直接放<code>Hexo/source</code>目录下，按<a href="https://www.hduzn.cn/2022/05/12/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BF%87%E6%B8%B2%E6%9F%93/">Hexo 自定义页面 跳过渲染</a>这篇文章的跳过渲染方法，<code>hexo g</code>后就会生成在public目录下了）</p>
</li>
<li><p>最后，添加站点地图</p>
<p>有两种方式，可以自己都试下。提交完后如下图所示就行了，回头再看：</p>
</li>
</ul>
<h3 id="2-提交给Bing"><a href="#2-提交给Bing" class="headerlink" title="2.提交给Bing"></a>2.提交给Bing</h3><p>如果能提交给Google的话，先提交给Google后，再提交给Bing就很简单。因为可以直接授权通过。</p>
<p>网址：<a href="https://www.bing.com/webmasters">https://www.bing.com/webmasters</a></p>
<p>然后我就直接添加了下【网站地图】，就用sitemap.xml文件就行，把http和https的直接添加试了下。<br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010324047.png" alt="img"></p>
<h3 id="3-提交给百度"><a href="#3-提交给百度" class="headerlink" title="3.提交给百度"></a>3.提交给百度</h3><p>百度原来叫站长平台吧，现在好像改名叫什么资源了。<br>网址：<a href="https://ziyuan.baidu.com/linksubmit/index">https://ziyuan.baidu.com/linksubmit/index</a></p>
<p>百度是我最搞不懂的，明明<code>域名/baidusitemap.xml</code>文件都能访问，反正提交还是失败。<br>提示“主域校验失败”。<br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403010324231.png" alt="img"></p>
<p>难道文章里还不能出现别的站点了？？太奇怪了，什么玩意~ 遂放弃。</p>
<p><strong>最后，顺便说一下可以怎么在搜索引擎上看结果</strong>：<br>可以过一两天，然后打开搜索引擎，直接搜索 <code>site:域名</code>或者前面再加个关键词，（比如我的搜索 <code>hexo site:hduzn.cn</code>）就可以看收录了多少了。<br>在搜索引擎中搜索时 ，加上site:域名，本来就可以搜索指定站点中的内容。</p>
]]></content>
      <categories>
        <category>hexo经验</category>
      </categories>
      <tags>
        <tag>hexo站点地图</tag>
        <tag>hexo创建sitemap</tag>
      </tags>
  </entry>
  <entry>
    <title>google搜索检索资料必备的搜索语法</title>
    <url>/posts/4ce8ee48.html</url>
    <content><![CDATA[<h1 id="google检索必备的搜索语法"><a href="#google检索必备的搜索语法" class="headerlink" title="google检索必备的搜索语法"></a>google检索必备的搜索语法</h1><p>我们在用google搜索时候，可运用搜索语法提升效率，下面简单介绍一下几个常用的点。</p>
<h4 id="具体用法："><a href="#具体用法：" class="headerlink" title="具体用法："></a>具体用法：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">限定关键词:用双引号&quot;&quot;包裹</span><br></pre></td></tr></table></figure>



<h3 id="1-限定标题-intitle"><a href="#1-限定标题-intitle" class="headerlink" title="(1) 限定标题:intitle"></a>(1) 限定标题:intitle</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“intitle:登录”</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011250731.png"></p>
<h3 id="2-限定内容-intext"><a href="#2-限定内容-intext" class="headerlink" title="(2) 限定内容:intext"></a>(2) 限定内容:intext</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“intext:2023年中国经济报告”</span><br></pre></td></tr></table></figure>

<p> <img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011253496.png"></p>
<h3 id="3-限定网址-inurl"><a href="#3-限定网址-inurl" class="headerlink" title="(3) 限定网址:inurl"></a>(3) 限定网址:inurl</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">特斯拉 site:www.baidu.com</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011301202.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“inurl:www.baidu.com”</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011254277.png"></p>
<h3 id="4-限定网站-site"><a href="#4-限定网站-site" class="headerlink" title="(4) 限定网站:site"></a>(4) 限定网站:site</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">海贼王 site:www.baidu.com</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011300416.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“Site：family.chinaok.com”</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011256115.png"></p>
<h3 id="5-限定图片大小-imagesize"><a href="#5-限定图片大小-imagesize" class="headerlink" title="(5) 限定图片大小:imagesize"></a>(5) 限定图片大小:imagesize</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">海贼王 imagesize:1920*1080</span><br></pre></td></tr></table></figure>

<p> <img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011259924.png"></p>
<h3 id="6-限定文件类型-filetype"><a href="#6-限定文件类型-filetype" class="headerlink" title="(6) 限定文件类型:filetype"></a>(6) 限定文件类型:filetype</h3><p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403011245543.png"></p>
<h3 id="PS：掌握以上知识，事半功倍！"><a href="#PS：掌握以上知识，事半功倍！" class="headerlink" title="PS：掌握以上知识，事半功倍！"></a>PS：掌握以上知识，事半功倍！</h3>]]></content>
      <categories>
        <category>google经验</category>
      </categories>
      <tags>
        <tag>google搜索技巧</tag>
        <tag>google检索技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>2024/03/10 何为迷茫？为何迷茫？</title>
    <url>/posts/22d1cfd8.html</url>
    <content><![CDATA[<h1 id="何为迷茫？为何迷茫？"><a href="#何为迷茫？为何迷茫？" class="headerlink" title="何为迷茫？为何迷茫？"></a>何为迷茫？为何迷茫？</h1><h2 id="一、题记"><a href="#一、题记" class="headerlink" title="一、题记"></a>一、题记</h2><p>自过年回来，到现在为止，题目没有录到多少，说在家兼职也是谈不上的，毕竟题量上不去的话，工资也就上不去，比起一个月上班能拿好几千来说，确实算是杯水车薪了，这就导致很多很多的问题，第一个是老婆身上的担子就重了；第二是自己一直如此，家里人也是很担心；第三就是自己如此久了以后，自己也是觉得压力山大，各种烦躁不安接踵而来。</p>
<h2 id="二、何为迷茫"><a href="#二、何为迷茫" class="headerlink" title="二、何为迷茫"></a>二、何为迷茫</h2><p>有时候，总是觉得自己很迷茫，然而这种状态也是一种很是玄幻的状态，到底什么样的情况叫做迷茫？你说无所事事叫做迷茫，可是我自己明明有事儿做，而且有时候在电脑面前一坐下就是一上午，或者一下午，或者一整天，都有出现过。也就是说，自己其实是有事儿做的，并不是属于无所事事那种。</p>
<p>那究竟什么是迷茫？</p>
<p>我由此陷入了深深的思考，其实迷茫，并不是说找不到事儿做，而是在自己的事儿并没有产生什么太大的价值，亦或者说直白一点儿就是没有产生经济价值，更直白一点就是没有赚到钱，就是那么简单，以至于做的事儿只是用爱发电而已。当然了，也并不是说一点儿可取之处也没有，毕竟微信公众号那里每天还是能够给自己带来几毛到几块钱不等的收入，也即是说还是有价值的。</p>
<p>那为何会这么迷茫呢？或许是不等价，就好像一个天平，如果哪一方重了，最终还是会出现倾斜的。而生活是需要用钱的，并不是说俗气不俗气的问题，简简单单的生存问题，就是对自己最大的考验了，如果你考着谢谢工作号，做做其他能够维持生活还有剩余，那估计觉得这样的状态还不错，这样的日子还是很有盼头的。</p>
<p>但是，现实就是如此的状态没有赚到钱，不能平衡开支产生剩余，因此就造成了不去上班，不去打工就得饿死的状态，既然如此，那肯定就会让自己烦躁不安，试想，面对不稳定，不确定，面对明天就得饿肚子，谁会心安理得？</p>
<p>所以，也就产生了迷茫，毕竟自己不是不想上班，只是找不到合适的班上。矛盾就积聚了起来。也就产生了下一个问题。</p>
<h2 id="三、为何迷茫"><a href="#三、为何迷茫" class="headerlink" title="三、为何迷茫"></a>三、为何迷茫</h2><p>为何迷茫？</p>
<p>对啊，为何迷茫？</p>
<p>是不会做事儿吗？并不是。那是能力不够吗？并不是。那究竟是为何会迷茫呢？</p>
<p>我想，是为了明天和以后而迷茫吧！说实话，一直觉得体制内的工作没有太大价值，体制内机械的重复，工资也不高，所以当初就没有想过往这方面发展。也就一直没有下定决心去考编制之类的。而现在，疫情后的今天，明白了还是体制内的工作稳定，不管是啥情况，哪怕打仗了，估计也是稳得一逼，毕竟哪怕你休假，工资都是到位的。而且还不能小看这些岗位的工资，就好比我老婆来说，她现在每个月三千多到手的，然后住房公积金有1400，再加上一些补贴之类的，还是能达到5000+，而且是扣掉社保养老那些的情况下，逢年过节还有一些补贴，所以综合起来，收入也还可以，毕竟在填饱肚子的同时还有剩余。</p>
<p>而我之所以迷茫，估计也是与这些有关系，毕竟如果自己一个月只有两三千块钱，那简直见识浪费劳动力，简直就是浪费了这些年的学习。要知道，我们村几个没有怎么读书的比我年纪还小点的，在外面一个月都能拿到六千至八千的样子，别人一个月顶我两个月，那我这份辛苦换来的，只能是三个字”不值得“。这也是找工作时候，有些挑剔的原因吧。</p>
<p>明天，出去成都走走，四处逛逛，看看大家都在做些什么工作，让自己争取走出这样的迷茫心境。</p>
<h2 id="四、接下来"><a href="#四、接下来" class="headerlink" title="四、接下来"></a>四、接下来</h2><p>接下来，就真的全力以赴去做，全力以赴的去找工作，毕竟只有工作了，才会安心一些，工资稍微低一点儿没有关系的，只要合适，对口，同时最好能长远一些。我之所以不太想继续教书，一是觉得现在的学生不知道感恩，二是因为自己负债太多，尚未处理，时不时还会收到催债短信，导致自己烦躁。</p>
<p>利用这两天去成都瞎逛，让自己真的静下心来，思考一下未来的出路，未来的工作，未来的规划，早点安心上班，早点收收心，在认真上班的闲暇之余搞搞副业，才是正道。</p>
<p>就这样吧，希望一切顺利！</p>
<p>​														执笔于2024年3月10日 晚</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141625019.JPG"></p>
]]></content>
      <categories>
        <category>日常</category>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>2023/06/27 随笔</title>
    <url>/posts/9ec9b550.html</url>
    <content><![CDATA[<h1 id="2023-06-27-随笔"><a href="#2023-06-27-随笔" class="headerlink" title="2023&#x2F;06&#x2F;27 随笔"></a>2023&#x2F;06&#x2F;27 随笔</h1><p>现在是夜里接近十一点了</p>
<p>在这简单记录一下最近的一个状态</p>
<p>每天还是有事儿做</p>
<p>慢慢的也开始有钱赚</p>
<p>有时候一天有几十块</p>
<p>有时候一天只有十多块</p>
<p>不过比起以前都是好很多了</p>
<p>公众号已经写了一个多月了</p>
<p>到下个月12号就是两个月了</p>
<p>自己说的做一件事儿能够坚持下去</p>
<p>不是简单的说说而已</p>
<p>自己是真的做得到</p>
<p>就看自己想不想去做了</p>
<p>赚钱这东西</p>
<p>真的是越赚越上瘾的</p>
<p>头条以前一天几块钱自己都很高兴</p>
<p>现在每天基本都是十多块</p>
<p>今天三十多</p>
<p>自己反而很淡定了</p>
<p>脑海中慢慢的有个想法</p>
<p>那就是自己的收入什么时候一天可以突破一百呢？</p>
<p>目前只有头条和百家有收益</p>
<p>其他都是没有收益的</p>
<p>B站和知乎还没有开通</p>
<p>只能达到要求申请试试了</p>
<p>加油</p>
<p>未来可期</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102110743.jpeg" alt="e375b1f4cd29dcc27104be708cc36805"></p>
]]></content>
      <categories>
        <category>日常</category>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>2023/06/15 一招启用Chrome的多线程下载</title>
    <url>/posts/1e9c8b8.html</url>
    <content><![CDATA[<h2 id="2023-06-15-一招启用Chrome的多线程下载"><a href="#2023-06-15-一招启用Chrome的多线程下载" class="headerlink" title="2023&#x2F;06&#x2F;15 一招启用Chrome的多线程下载"></a>2023&#x2F;06&#x2F;15 一招启用Chrome的多线程下载</h2><p>我们使用chrome的时候，有时候需要下载大文件，由于chrome默认的单线程限制，无法最大利用带宽进行下载，而有时候IDM也不能调用，这时候就需要开启浏览器自带的多线程下载。在这篇文章中，我来和大家一起来启用chrome的多线程下载设置。</p>
<h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul>
<li>Chrome 浏览器</li>
</ul>
<h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><p>1.打开chrome浏览器，地址栏输入： <code>chrome://flags/#enable-parallel-downloading</code>，回车进入，将Parallel downloading设置为Enabled。然后点击“Relaunch”按钮即可</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102120426.png" alt="20230612002025"></p>
<p>2.可以看到下载速度已经从原来的100多k上来到5-6M这样了</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102120415.png" alt="20230612002424"></p>
<p>用得到的朋友，赶紧试试吧！</p>
<p>更多资源，欢迎关注我的微信公众号：</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102120497.jpg" alt="qrcode_for_gh_0c32857fc9c2_344-(1)"></p>
]]></content>
      <categories>
        <category>日常</category>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-03-10 分享几张好看的壁纸</title>
    <url>/posts/584aabbc.html</url>
    <content><![CDATA[<h2 id="分享一些好看的壁纸给大家，喜欢的记得收藏哦！"><a href="#分享一些好看的壁纸给大家，喜欢的记得收藏哦！" class="headerlink" title="分享一些好看的壁纸给大家，喜欢的记得收藏哦！"></a>分享一些好看的壁纸给大家，喜欢的记得收藏哦！</h2><p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126405.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126406.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126610.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126611.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126612.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126613.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126614.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126615.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126616.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403102126617.jpg"></p>
]]></content>
      <categories>
        <category>日常</category>
        <category>分享</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-03-11 记录两天半成都之行之感之思</title>
    <url>/posts/c3f03b3c.html</url>
    <content><![CDATA[<h1 id="2024-03-11-记录两天半成都之行之感之思"><a href="#2024-03-11-记录两天半成都之行之感之思" class="headerlink" title="2024-03-11 记录两天半成都之行之感之思"></a>2024-03-11 记录两天半成都之行之感之思</h1><h2 id="一、缘起"><a href="#一、缘起" class="headerlink" title="一、缘起"></a>一、缘起</h2><p>有时候，整个人会变得很压抑，具体原因估计就是因为很久没有正常去上班，自己没有什么可以持续的收入导致的吧，因此总是觉得自己“废了”一样，再加上老婆催我赶紧找班上，整个人就更加郁闷了吧。</p>
<p>心情不好怎么办？干脆出去走走，啥也不用想的那种，走到哪里算哪里。</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141409037.JPG"></p>
<h2 id="二、出发"><a href="#二、出发" class="headerlink" title="二、出发"></a>二、出发</h2><p>于是3.10号，也就是星期天，给我老婆说了下我的想法，她没有多说什么，估计还是觉得我这是有点儿逃避责任吧，不过还是去走走吧，不去感受别人为何而工作，自己总是处于一种迷茫的状态也是很不好的。就这样，我把火车票买好，然后3.11号，带上充电宝，充电线，身份证，就出门了。搭乘19路公交车直达火车站，然后在车站等车。看着人来人往的车站，我也是很感慨，看来和我一样的人并不少，大家都是在匆匆赶路，去哪里的都有。年纪也是各个年龄段的都有，确实很让人惊讶。这个时候，我不由得想到，我们都是不断的搭乘各式各样的列车吧，虽然目的地不同，但是我们都是过客，都不能够阻碍什么，我们能做的就是做好自己分内的事儿。</p>
<p>虽然列车晚点了半个小时，在车上又待了四十多分钟，终于还是抵达成都了。所以很多时候，我们在做事儿的时候哪怕有些曲折，但是最终还是会到终点的，不是吗？对了，我记得，在车上火车一直不走的时候，有个男子打电话去投诉火车去了，然后在火车里滔滔不绝的述说着他很忙，急着赶去眉山，可是现在这情况，让他后续的时间安排全都乱了，他的诉求是要下车。虽然列车长没有过来，不过最终这个男子还是被允许下车了，然后我们所在车厢的乘务员给他开的门。还好我不赶时间，本来就是想来看看人生百态的，默默的听着歌，其实还挺好。不过，想一下，如果我处于那个男人的角度，我会不会也是如此处理呢？我想，如果是以前的我，断然不会，不过现在的我，答案是会的。</p>
<p>在列车上，还听到旁边几个中年大叔在讨论政治，大家都在说某某某执政啥的，最终得出一句话：“我们老百姓关注的是什么？是谁当官吗？并不是，老百姓只是关注自己的吃饭问题，最多就是关注自己三天的吃饭问题，位置不对，关注那么多做什么？！”这话像是一道闪电，划过我的脑海，是啊，我自己关注那么多干什么呢？自己三天的吃饭问题解决了吗？要知道，这段时间没有上班，要是没有老婆接济，估计是饭都吃不起了，可是，我明明是那个她很崇拜的无所不能的自己，那自己应该振作起来，早点找班上 ，自己之前可是答应了她的，假期回去，要给妈妈几千块钱的，可千万不能食言啊！</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141413775.JPG"></p>
<h2 id="三、成都"><a href="#三、成都" class="headerlink" title="三、成都"></a>三、成都</h2><p>成都，天府之国，这个原本的二线城市，这些年也是评为了新一线城市，人们也是你来我往，世人都是忙忙碌碌、恍恍惚惚吧。手机上搜了搜，最终还是决定先去就近的公园走走，然后再去下一个公园，最后呢走到市中心天府广场逛逛，在那附近找地方休息就是。就这样，第一站就去浣花溪公园，本来想去公园旁边的杜甫草堂的，结果草堂门票70多，觉得没有那个必要，就到旁边公园逛逛也是挺不错。期间因为我的哈罗单车不知道啥时候买的月卡还没过期，又可以骑单车赶路，还是挺好的。</p>
<p>浣花溪公园是一个小公园，公园里的长椅上，很多老人倚靠在上面晒太阳，很是惬意，当然也有一些年轻人或者是带孩子的家长也在这附近逛，还是很热闹的，拿出手机却找不到什么拍的，干脆拍拍桃花吧。不知道何时，自己都开始拍起花来了，也是醉了。期间，有两个老人一起散步，然后我听到老爷爷说：“现在有两个选择，一个是往这边走，就回去了，另一个就是往另一边，绕公园一周。“不知道最后他们如何选择的，但是，我后面没有遇到他们，估计是往回走了吧。我不禁想到，很多时候，两个人在一起，还是应该更多的给对方一些选择权，这样才和谐。我们都不能够替任何人做出选择，最终选择权还是要交给对方。同时，我们生命中，也是有很多很多的选择，正如自己的一次次选择，才是导致现在自己迷茫的最终原因。既然是自己的选择，那就没有必要抱怨。</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141413997.JPG"></p>
<p>走走停停，遇到一个女子陪着一个老人散步，估计当成是女儿和父亲吧，我只听到老人对女儿的劝慰：“那你这次回去，要去找班上哦……”其他的没有听清楚，不过也不重要了，我会想一下这么久，自己在干什么呢？这么大年纪的老人家都知道劝自己女儿找班上，我又有什么资格不去上班呢？年轻人的价值，还是要在工作中得以体现，而不是在于偷懒，自己虽然也是很忙，不过终归没有好好上班，没有体现出自己的价值。看着公园里那些拍鸟的大爷，他们的退休生活还挺不错，自己的退休生活是怎么样的？貌似没有好好想过这个问题。但是，自己现在都没有解决好自己的事儿，没有资格去说啥吧。</p>
<p>后来，坐动车转到宽窄巷子，走走停停，觉得这个来了好多次的宽窄巷子很是陌生，依旧是人潮汹涌，不知道人们都是靠什么生存，为何如此多人在这逛街呢？或许很多是我们不知道的吧，毕竟工作之余还是可以到处走走的，比如培训机构啥的，不就是周一周二放假吗？还有一些周末比较繁忙的工作，大多选在周一放假，比如成都博物馆，成都科技馆那些，也是周一放假，周二到周日上班。</p>
<p>当自己漫无目的的走走停停的，这种感觉真的挺不错，无法用语言来形容，自己就是一个过客，自己就是一个思考者，边走边想，后来，老婆给我转了200块钱，本来不想收的，不过这么几天，还是收到吧，她有这个心就觉得挺温暖的。然后本来想睡车站或者网吧包夜的，既然有钱了，那就可以去住酒店了，然后我就在美团上搜附近的酒店，本来想去住青年旅舍的，但是想到自己呼噜声音有点大，还是算了吧，于是选来选去，最后选择去一个网吧，住网吧包间，里面有电脑，旁边还有床，玩电脑累了还可以睡觉，挺不错，一天只要五十多，挺划算的，五十多买不了吃亏，买不了上当，要知道网吧里面哪怕最低配置的区域都是要4块钱一个小时，我在里面一住就是十多个小时，早就回本了。</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141413916.JPG"></p>
<h2 id="四、博览古今"><a href="#四、博览古今" class="headerlink" title="四、博览古今"></a>四、博览古今</h2><p>第二天，一大早就退房赶车去体检去了，自己的京东PLUS有一项优惠是免费体检，虽然没有CT那些，但是血常规、心电图啥的都是有的，也是挺好的，这个体检机构叫国宾体检，是私人体检机构，不过进去之后觉得还挺不错，里面的服务各种挺好，那些护士指引你该去那里，然后还会各个科室的医生也是挺专业的，基本上很快就体检好了，最后体检完，还提供免费早餐，我看了一下，早餐居然还是肯德基的套餐，也太有钱了，这服务也太好了。唯一不好的，就是这个大型的体检机构只在成都重庆等大点的城市才有分院，在遂宁这些小地方是注定没有的。</p>
<p>体检结束还早，就约了下附近的科技馆和博物馆，把时间提前到上午，然后就是去科技馆把玩一下那些各种各样的有趣的东西，还是挺不错的，心里就想着以后得带老婆和孩子一起来玩。在科技馆还碰到某个学校带学生来参观，心里不由得想到还是隔得近的学生幸福，这些场馆想来就来，要知道农村的孩子，有的估计一辈子都没有来过吧。后来，又去了博物馆参观了一下，不过博物馆这东西，确实需要人讲解才有兴趣，不然的话感觉没有太大意思。</p>
<p>后来，感觉没啥事，也到中午了，就赶回网吧，又续了一天的包间，晚餐当然是点外卖了，毕竟便宜，如果去外面吃，一个是贵，二是选择困难症，还有就是一个人，很少有合适的套餐可以吃吧。</p>
<p>在网吧期间不想玩游戏，然后就搜了下动漫来看，看了一个热门的《咒术回战》吧，还挺好看，不过就是太短了，不像海贼王那样是连载的，看完都半夜了，隔壁呼噜声都响起来了，就匆匆入睡了。</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141413641.JPG"></p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141414963.JPG"></p>
<h2 id="五、些许感悟"><a href="#五、些许感悟" class="headerlink" title="五、些许感悟"></a>五、些许感悟</h2><p>生命的意义，并不是仅仅在于活着，而更应该在于创造价值，不管价值多少，都是要创造了价值才是。老一辈的，明显比我们更懂，所以，接下来认真找工作，别在犹豫徘徊，争取早点上班！</p>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141414024.JPG"></p>
]]></content>
      <categories>
        <category>日常</category>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-03-14 分享几张好看的壁纸</title>
    <url>/posts/f24c96d.html</url>
    <content><![CDATA[<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418177.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418178.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418179.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418180.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418181.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418182.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418183.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418184.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418185.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418186.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418187.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418188.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418189.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418190.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418191.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418192.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418193.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418194.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418196.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418197.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418198.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418199.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418200.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418201.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418202.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418203.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418204.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418205.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418206.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418207.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418208.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418209.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418210.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418211.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418212.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418213.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418214.jpg"><br><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141418215.jpg"></p>
]]></content>
      <categories>
        <category>日常</category>
        <category>分享</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-03-14 文章头文件解析</title>
    <url>/posts/d2910765.html</url>
    <content><![CDATA[<h1 id="2024-03-14-文章头文件解析"><a href="#2024-03-14-文章头文件解析" class="headerlink" title="2024-03-14 文章头文件解析"></a>2024-03-14 文章头文件解析</h1><h3 id="以下关键词都是头文件可用，具体根据需要选择："><a href="#以下关键词都是头文件可用，具体根据需要选择：" class="headerlink" title="以下关键词都是头文件可用，具体根据需要选择："></a>以下关键词都是头文件可用，具体根据需要选择：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img:</span><br><span class="line">comments:</span><br><span class="line">cover:</span><br><span class="line">toc:</span><br><span class="line">toc_number:</span><br><span class="line">toc_style_simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright_author:</span><br><span class="line">copyright_author_href:</span><br><span class="line">copyright_url:</span><br><span class="line">copyright_info:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">aside:</span><br><span class="line">abcjs:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">关键词</th>
<th>解析</th>
</tr>
</thead>
<tbody><tr>
<td align="left">title</td>
<td>【必需】文章標題</td>
</tr>
<tr>
<td align="left">date</td>
<td>【必需】文章創建日期</td>
</tr>
<tr>
<td align="left">updated</td>
<td>【可選】文章更新日期</td>
</tr>
<tr>
<td align="left">tags</td>
<td>【可選】文章標籤</td>
</tr>
<tr>
<td align="left">categories</td>
<td>【可選】文章分類</td>
</tr>
<tr>
<td align="left">keywords</td>
<td>【可選】文章關鍵字</td>
</tr>
<tr>
<td align="left">description</td>
<td>【可選】文章描述</td>
</tr>
<tr>
<td align="left">top_img</td>
<td>【可選】文章頂部圖片</td>
</tr>
<tr>
<td align="left">cover</td>
<td>【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false&#x2F;圖片地址&#x2F;留空)</td>
</tr>
<tr>
<td align="left">comments</td>
<td>【可選】顯示文章評論模塊(默認 true)</td>
</tr>
<tr>
<td align="left">toc</td>
<td>【可選】顯示文章TOC(默認為設置中toc的enable配置)</td>
</tr>
<tr>
<td align="left">toc_number</td>
<td>【可選】顯示toc_number(默認為設置中toc的number配置)</td>
</tr>
<tr>
<td align="left">toc_style_simple</td>
<td>【可選】顯示 toc 簡潔模式</td>
</tr>
<tr>
<td align="left">copyright</td>
<td>【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)</td>
</tr>
<tr>
<td align="left">copyright_author</td>
<td>【可選】文章版權模塊的文章作者</td>
</tr>
<tr>
<td align="left">copyright_author_href</td>
<td>【可選】文章版權模塊的文章作者鏈接</td>
</tr>
<tr>
<td align="left">copyright_url</td>
<td>【可選】文章版權模塊的文章連結鏈接</td>
</tr>
<tr>
<td align="left">copyright_info</td>
<td>【可選】文章版權模塊的版權聲明文字</td>
</tr>
<tr>
<td align="left">mathjax</td>
<td>【可選】顯示mathjax(當設置 mathjax 的 per_page:  false 時，才需要配置，默認 false )</td>
</tr>
<tr>
<td align="left">katex</td>
<td>【可選】顯示 katex (當設置 katex 的 per_page: false  時，才需要配置，默認 false )</td>
</tr>
<tr>
<td align="left">aplayer</td>
<td>【可選】在需要的頁面加載 aplayer 的 js 和  css,請參考文章下面的音樂 配置</td>
</tr>
<tr>
<td align="left">highlight_shrink</td>
<td>【可選】配置代碼框是否展開(true&#x2F;false)(默認為設置中  highlight_shrink 的配置)</td>
</tr>
<tr>
<td align="left">aside</td>
<td>【可選】顯示側邊欄 (默認 true)【可選】加載 abcjs (當設置 abcjs 的 per_page: false  時，才需要配置，默認 false )</td>
</tr>
</tbody></table>
<p><img src="https://cdn.318666.xyz/gh/Eystasy/piclist-blog-hosting/piclist/202403141449169.jpg"></p>
]]></content>
      <categories>
        <category>分类</category>
      </categories>
      <tags>
        <tag>hexo教程</tag>
      </tags>
  </entry>
</search>
